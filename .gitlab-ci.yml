---

.script-git-submodule: &script-git-submodule
  - |
    git submodule sync --recursive
    git submodule update --init --recursive

.script-bootstrap-packer: &script-bootstrap-packer
  - |
    if ! [[ -x "$(command -v packer)" ]]; then
      curl -skL -O https://releases.hashicorp.com/packer/1.6.6/packer_1.6.6_linux_amd64.zip
      sudo unzip -qq -o -d /usr/local/bin packer_1.6.6_linux_amd64.zip
      rm -rf packer_1.6.6_linux_amd64.zip
    fi

.script-bootstrap-docker: &script-bootstrap-docker
  - |
    if ! [[ -x "$(command -v docker)" ]]; then
      export DEBIAN_FRONTEND=noninteractive
      curl -skL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      sudo add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      sudo -E apt-get update
      sudo -E apt-get -y install containerd.io docker-ce docker-ce-cli
    fi
    sudo systemctl start docker.service
    echo $DOCKER_HUB_TOKEN | docker login --username=$DOCKER_HUB_USERNAME --password-stdin

.script-bootstrap-ansible: &script-bootstrap-ansible
  - |
    if ! [[ -x "$(command -v ansible)" ]]; then
      export DEBIAN_FRONTEND=noninteractive
      export PIPX_HOME=/usr/local/share/pipx
      export PIPX_BIN_DIR=/usr/local/bin
      sudo -E apt-get update
      sudo -E apt-get install -y bzip2 ca-certificates curl gcc gnupg gzip iproute2 procps python3 python3-apt python3-cryptography python3-dev python3-jmespath python3-lxml python3-netaddr python3-pip python3-setuptools python3-venv python3-virtualenv python3-wheel sudo tar unzip xz-utils zip
      sudo -E pip3 install --prefix=/usr/local --upgrade pipx
      sudo -E pipx install --force --pip-args='--upgrade' flake8
      sudo -E pipx install --force --pip-args='--upgrade' yamllint
      sudo -E pipx install --force --pip-args='--upgrade' --include-deps 'ansible>=2.10.3,<2.11.0'
      sudo -E pipx inject --force --pip-args='--upgrade' --include-apps ansible ansible-lint
      sudo -E pipx inject --force --pip-args='--upgrade' ansible docker netaddr python-vagrant
    fi

.script-linters: &script-linters
  - |
    yamllint .
    ansible-lint
    flake8

.script-packer-build: &script-packer-build
  - |
    cd $CI_PROJECT_DIR/packer/$_PACKER_BUILDER_PROVIDER-$_PACKER_BUILDER_VERSION
    packer build packer.json

.script-docker-push: &script-docker-push
  - |
    if [[ -n "$CI_COMMIT_TAG" ]] && [[ "$CI_COMMIT_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+ ]]; then
      export _TAG=$CI_COMMIT_TAG
    elif [[ -n "$CI_COMMIT_BRANCH" ]] && [[ "$CI_COMMIT_BRANCH" =~ master ]]; then
      export _TAG=$(date +%Y%m%d).0.0
    else
      exit 0
    fi
    cd $CI_PROJECT_DIR/packer/$_PACKER_BUILDER_PROVIDER-$_PACKER_BUILDER_VERSION
    export _ORG=$CI_PROJECT_NAMESPACE
    export _IMAGE=$(echo $CI_PROJECT_NAME | sed 's/^docker-//g')-$_PACKER_BUILDER_VERSION
    docker load --input output-docker/image.tar.gz
    export _ID=$(docker images | awk '{ print $3 }' | awk 'NR==2')
    docker tag $_ID $_ORG/$_IMAGE:latest
    docker push $_ORG/$_IMAGE:latest
    docker tag $_ID $_ORG/$_IMAGE:$_TAG
    docker push $_ORG/$_IMAGE:$_TAG

.job-packer-build: &job-packer-build
  script:
    - *script-bootstrap-packer
    - *script-bootstrap-docker
    - *script-bootstrap-ansible
    - *script-linters
    - *script-packer-build

.job-docker-push: &job-docker-push
  script:
    - *script-bootstrap-docker
    - *script-docker-push

default:
  retry: 2
  before_script:
    - *script-git-submodule

build:docker-7.2:
  <<: *job-packer-build
  stage: build
  cache:
    key: "$CI_PIPELINE_ID-docker-7.2"
    paths:
      - packer/*/output-docker
  variables:
    _PACKER_BUILDER_PROVIDER: "docker"
    _PACKER_BUILDER_VERSION: "7.2"

deploy:docker-7.2:
  <<: *job-docker-push
  stage: deploy
  cache:
    key: "$CI_PIPELINE_ID-docker-7.2"
    paths:
      - packer/*/output-docker
    policy: pull
  variables:
    _PACKER_BUILDER_PROVIDER: "docker"
    _PACKER_BUILDER_VERSION: "7.2"
  needs:
    - build:docker-7.2

build:docker-7.1:
  <<: *job-packer-build
  stage: build
  cache:
    key: "$CI_PIPELINE_ID-docker-7.1"
    paths:
      - packer/*/output-docker
  variables:
    _PACKER_BUILDER_PROVIDER: "docker"
    _PACKER_BUILDER_VERSION: "7.1"

deploy:docker-7.1:
  <<: *job-docker-push
  stage: deploy
  cache:
    key: "$CI_PIPELINE_ID-docker-7.1"
    paths:
      - packer/*/output-docker
    policy: pull
  variables:
    _PACKER_BUILDER_PROVIDER: "docker"
    _PACKER_BUILDER_VERSION: "7.1"
  needs:
    - build:docker-7.1
