---

.script-git-submodule: &script-git-submodule
  - |
    git submodule sync --recursive
    git submodule update --init --recursive

.script-bootstrap-packer: &script-bootstrap-packer
  - |
    if ! [[ -x "$(command -v packer)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb [arch=amd64] https://apt.releases.hashicorp.com focal main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
      curl -fsSL https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/hashicorp.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y packer
    fi
    sh -x -c "packer --version"

.script-bootstrap-docker: &script-bootstrap-docker
  - |
    if ! [[ -x "$(command -v docker)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://download.opensuse.org/repositories/home:/alvistack/xUbuntu_20.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://download.opensuse.org/repositories/home:alvistack/xUbuntu_20.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y buildah conmon containernetworking-plugins containers-common crun fuse-overlayfs podman podman-docker runc skopeo
    fi
    sh -x -c "docker --version"

.script-bootstrap-python: &script-bootstrap-python
  - |
    if ! [[ -x "$(command -v pipx)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://download.opensuse.org/repositories/home:/alvistack/xUbuntu_20.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://download.opensuse.org/repositories/home:alvistack/xUbuntu_20.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y bzip2 ca-certificates curl flake8 gcc gnupg gzip iproute2 procps python3 python3-apt python3-cryptography python3-flake8 python3-jmespath python3-lxml python3-netaddr python3-pip python3-pipx python3-setuptools python3-venv python3-virtualenv python3-wheel python3-yamllint sudo tar unzip xz-utils zip
    fi
    sh -x -c "python3 --version"
    sh -x -c "pipx --version"
    sh -x -c "flake8 --version"
    sh -x -c "yamllint --version"

.script-bootstrap-ansible: &script-bootstrap-ansible
  - |
    if ! [[ -x "$(command -v ansible)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://download.opensuse.org/repositories/home:/alvistack/xUbuntu_20.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://download.opensuse.org/repositories/home:alvistack/xUbuntu_20.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y ansible python3-ansible-lint python3-docker python3-netaddr python3-vagrant
    fi
    sh -x -c "ansible --version"
    sh -x -c "ansible-lint --version"

.script-linters: &script-linters
  - |
    yamllint .
    ansible-lint
    flake8

.script-packer-build: &script-packer-build
  - |
    echo $DOCKER_HUB_TOKEN | sudo docker login --username=$DOCKER_HUB_USERNAME --password-stdin
    cd $CI_PROJECT_DIR/packer/$_PACKER_BUILDER_PROVIDER-$_PACKER_BUILDER_VERSION
    sudo packer build packer.json

.script-docker-push: &script-docker-push
  - |
    if [[ -n "$CI_COMMIT_TAG" ]] && [[ "$CI_COMMIT_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+ ]]; then
      export _TAG="$CI_COMMIT_TAG"
    elif [[ -n "$CI_COMMIT_BRANCH" ]] && [[ "$CI_COMMIT_BRANCH" =~ master ]]; then
      export _TAG="$(date +%Y%m%d).0.0"
    else
      exit 0
    fi
    echo $DOCKER_HUB_TOKEN | sudo docker login --username=$DOCKER_HUB_USERNAME --password-stdin
    cd $CI_PROJECT_DIR/packer/$_PACKER_BUILDER_PROVIDER-$_PACKER_BUILDER_VERSION
    export _ORG="$CI_PROJECT_NAMESPACE"
    export _IMAGE="$(echo $CI_PROJECT_NAME | sed 's/^docker-//g')-$_PACKER_BUILDER_VERSION"
    sudo docker load --input output-docker/image.tar.gz
    export _ID="$(sudo docker images | awk '{ print $3 }' | awk 'NR==2')"
    sudo docker tag $_ID $_ORG/$_IMAGE:latest
    sudo docker push $_ORG/$_IMAGE:latest
    sudo docker tag $_ID $_ORG/$_IMAGE:$_TAG
    sudo docker push $_ORG/$_IMAGE:$_TAG

.job-packer-build: &job-packer-build
  script:
    - *script-bootstrap-packer
    - *script-bootstrap-docker
    - *script-bootstrap-python
    - *script-bootstrap-ansible
    - *script-linters
    - *script-packer-build

.job-docker-push: &job-docker-push
  script:
    - *script-bootstrap-docker
    - *script-docker-push

default:
  retry: 2
  before_script:
    - *script-git-submodule

build:docker-8.1:
  <<: *job-packer-build
  stage: build
  cache:
    key: "$CI_PIPELINE_ID-docker-8.1"
    paths:
      - packer/*/output-docker
  variables:
    _PACKER_BUILDER_PROVIDER: "docker"
    _PACKER_BUILDER_VERSION: "8.1"

deploy:docker-8.1:
  <<: *job-docker-push
  stage: deploy
  cache:
    key: "$CI_PIPELINE_ID-docker-8.1"
    paths:
      - packer/*/output-docker
    policy: pull
  variables:
    _PACKER_BUILDER_PROVIDER: "docker"
    _PACKER_BUILDER_VERSION: "8.1"
  needs:
    - build:docker-8.1

build:docker-8.0:
  <<: *job-packer-build
  stage: build
  cache:
    key: "$CI_PIPELINE_ID-docker-8.0"
    paths:
      - packer/*/output-docker
  variables:
    _PACKER_BUILDER_PROVIDER: "docker"
    _PACKER_BUILDER_VERSION: "8.0"

deploy:docker-8.0:
  <<: *job-docker-push
  stage: deploy
  cache:
    key: "$CI_PIPELINE_ID-docker-8.0"
    paths:
      - packer/*/output-docker
    policy: pull
  variables:
    _PACKER_BUILDER_PROVIDER: "docker"
    _PACKER_BUILDER_VERSION: "8.0"
  needs:
    - build:docker-8.0
